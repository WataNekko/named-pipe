<?xml version="1.0"?>
<doc>
    <assembly>
        <name>WataNekko.IO.Pipes</name>
    </assembly>
    <members>
        <member name="M:WataNekko.IO.Pipes.ExtensionMethods.Read(System.IO.Pipes.PipeStream,System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Implements a <see cref="T:System.Threading.CancellationToken"/> in addition to the <see cref="M:System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)"/> method.
            </summary>
        </member>
        <member name="T:WataNekko.IO.Pipes.NamedPipe">
            <summary>
            Base class for <see cref="T:WataNekko.IO.Pipes.NamedPipeServer"/> and <see cref="T:WataNekko.IO.Pipes.NamedPipeClient"/>.
            </summary>
        </member>
        <member name="F:WataNekko.IO.Pipes.NamedPipe.Direction">
            <summary>
            Represents the direction of the pipe of a <see cref="T:WataNekko.IO.Pipes.NamedPipe"/> object.
            </summary>
        </member>
        <member name="F:WataNekko.IO.Pipes.NamedPipe.Options">
            <summary>
            Represents the pipe creation options of a <see cref="T:WataNekko.IO.Pipes.NamedPipe"/> object.
            </summary>
        </member>
        <member name="E:WataNekko.IO.Pipes.NamedPipe.DataReceived">
            <summary>
            Indicates that data has been received through a pipe represented by the <see cref="T:WataNekko.IO.Pipes.NamedPipe"/> object.
            </summary>
        </member>
        <member name="E:WataNekko.IO.Pipes.NamedPipe.ConnectionLost">
            <summary>
            Indicates that connection with the other end of the pipe has been lost.
            </summary>
            <remarks>
            This event is only fired when the other end is the one that explicitly disconnects.
            </remarks>
        </member>
        <member name="P:WataNekko.IO.Pipes.NamedPipe.PipeName">
            <summary>
            Gets or sets the name of the pipe.
            </summary>
            <remarks>
            Changes are only applied after <see cref="M:WataNekko.IO.Pipes.NamedPipe.ConnectAsync"/> successfully returns.
            </remarks>
        </member>
        <member name="P:WataNekko.IO.Pipes.NamedPipe.InBufferSize">
            <summary>
            Gets or sets the size, in bytes, of the inbound buffer for the pipe.
            </summary>
            <remarks>
            Attempts to change the size when the pipe is connected will result in an exception.
            </remarks>
            <value>The size in bytes of the input buffer. The default is 1024.</value>
            <exception cref="T:System.InvalidOperationException">The pipe is connected.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:WataNekko.IO.Pipes.NamedPipe.InBufferSize"/> value is less than or equal to zero.</exception>
        </member>
        <member name="P:WataNekko.IO.Pipes.NamedPipe.IsConnected">
            <summary>
            Gets a value indicating whether the pipe is connected.
            </summary>
        </member>
        <member name="P:WataNekko.IO.Pipes.NamedPipe.OverwriteBufferDataWhenFull">
            <summary>
            Gets or sets the value indicating whether new data should overwrite oldest data
            when the buffer is full.
            </summary>
            <remarks>
            When set to true, oldest unread data will be lost if new data is available. Default value is true.
            Attempts to change this when the pipe is connected will result in an exception.
            </remarks>
            <value>A <see cref="T:System.Boolean"/> indicating whether new data should overwrite oldest data when the buffer is full. The default is <c>true</c>.</value>
            <exception cref="T:System.InvalidOperationException">The pipe is connected.</exception>
        </member>
        <member name="P:WataNekko.IO.Pipes.NamedPipe.BytesInBuffer">
            <summary>
            Gets the number of bytes of data available to read in the input buffer.
            </summary>
            <returns>An <see cref="T:System.Int32"/> value between zero and <see cref="P:WataNekko.IO.Pipes.NamedPipe.InBufferSize"/>.</returns>
        </member>
        <member name="P:WataNekko.IO.Pipes.NamedPipe.WriteTimeout">
            <summary>
            Gets or sets the number of milliseconds before a time-out occurs when a write operation does not finish.
            </summary>
            <remarks>
            Attempts to change this value when the pipe is connected will result in an exception.
            It is possible but not recommended to set the timeout to <see cref="F:System.Threading.Timeout.Infinite">Infinite</see>
            as the <see cref="M:WataNekko.IO.Pipes.NamedPipe.Write(System.Byte[],System.Int32,System.Int32)"/> method can block other operations until it finishes or times out.
            </remarks>
            <value>The number of milliseconds before a time-out occurs. The default is 100.</value>
            <exception cref="T:System.InvalidOperationException">The pipe is connected.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <see cref="P:WataNekko.IO.Pipes.NamedPipe.WriteTimeout"/> value is less than zero and not equal to <see cref="F:System.Threading.Timeout.Infinite">Infinite</see>.</exception>
        </member>
        <member name="M:WataNekko.IO.Pipes.NamedPipe.ConnectAsync">
            <summary>
            Asynchronously attempts to connect the pipe and waits indefinitely until succeeds.
            </summary>
            <returns>A task that represents the asynchronous connect operation.</returns>
        </member>
        <member name="M:WataNekko.IO.Pipes.NamedPipe.ConnectAsync(System.Threading.CancellationToken)">
            <summary>
            Asynchronously attempts to connect the pipe and monitors cancellation requests.
            </summary>
            <param name="cancellationToken">The token to monitor for cancellation requests. The default value is <see cref="P:System.Threading.CancellationToken.None">None</see>.</param>
            <returns>A task that represents the asynchronous connect operation.</returns>
        </member>
        <member name="M:WataNekko.IO.Pipes.NamedPipe.Disconnect">
            <summary>
            Disconnects the current connection. Does nothing if the pipe is already disconnected.
            </summary>
        </member>
        <member name="M:WataNekko.IO.Pipes.NamedPipe.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a number of bytes from the <see cref="T:WataNekko.IO.Pipes.NamedPipe"/> input buffer and writes
            those bytes into a byte array at the specified offset.
            </summary>
            <param name="buffer">The byte array to write the input to.</param>
            <param name="offset">The offset in <paramref name="buffer"/> at which to write the bytes.</param>
            <param name="count">The maximum number of bytes to read. Fewer bytes are read if <paramref name="count"/> is greater than the number of bytes in the input buffer.</param>
            <returns>The number of bytes read.</returns>
            <exception cref="T:System.InvalidOperationException">The specified pipe is not connected.</exception>
            <exception cref="T:System.ArgumentNullException">The buffer passed is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset"/> or <paramref name="count"/> parameters are outside a valid region of the <paramref name="buffer"/> being passed. Either <paramref name="offset"/> or <paramref name="count"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="offset"/> plus <paramref name="count"/> is greater than the length of the <paramref name="buffer"/>.</exception>
        </member>
        <member name="M:WataNekko.IO.Pipes.NamedPipe.TryRead(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads a number of bytes from the <see cref="T:WataNekko.IO.Pipes.NamedPipe"/> input buffer and writes
            those bytes into a byte array at the specified offset. Returns 0 if the pipe is
            not connected instead of throwing an exception.
            </summary>
            <param name="buffer">The byte array to write the input to.</param>
            <param name="offset">The offset in <paramref name="buffer"/> at which to write the bytes.</param>
            <param name="count">The maximum number of bytes to read. Fewer bytes are read if <paramref name="count"/> is greater than the number of bytes in the input buffer.</param>
            <returns>The number of bytes read.</returns>
            <exception cref="T:System.ArgumentNullException">The buffer passed is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset"/> or <paramref name="count"/> parameters are outside a valid region of the <paramref name="buffer"/> being passed. Either <paramref name="offset"/> or <paramref name="count"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="offset"/> plus <paramref name="count"/> is greater than the length of the <paramref name="buffer"/>.</exception>
        </member>
        <member name="M:WataNekko.IO.Pipes.NamedPipe.ReadByte">
            <summary>
            Synchronously reads one byte from the <see cref="T:WataNekko.IO.Pipes.NamedPipe"/> input buffer.
            </summary>
            <returns>The byte, cast to an <see cref="T:System.Int32"/>, or -1 if no byte is available in the buffer.</returns>
            <exception cref="T:System.InvalidOperationException">The specified pipe is not connected.</exception>
        </member>
        <member name="M:WataNekko.IO.Pipes.NamedPipe.TryReadByte">
            <summary>
            Synchronously reads one byte from the <see cref="T:WataNekko.IO.Pipes.NamedPipe"/> input buffer.
            Returns -1 if the pipe is not connected instead of throwing an exception.
            </summary>
            <returns>The byte, cast to an <see cref="T:System.Int32"/>, or -1 if no byte is available in the buffer.</returns>
        </member>
        <member name="M:WataNekko.IO.Pipes.NamedPipe.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a specified number of bytes to the pipe using data from a buffer.
            </summary>
            <param name="buffer">The byte array that contains the data to write to the pipe.</param>
            <param name="offset">The zero-based byte offset in the <paramref name="buffer"/> parameter at which to begin copying bytes to the pipe.</param>
            <param name="count">The number of bytes to write.</param>
            <exception cref="T:System.InvalidOperationException">The specified pipe is not connected.</exception>
            <exception cref="T:System.ArgumentNullException">The <paramref name="buffer"/> passed is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset"/> or <paramref name="count"/> parameters are outside a valid region of the <paramref name="buffer"/> being passed. Either <paramref name="offset"/> or <paramref name="count"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="offset"/> plus <paramref name="count"/> is greater than the length of the <paramref name="buffer"/>.</exception>
            <exception cref="T:System.TimeoutException">The operation did not complete before the time-out period ended.</exception>
        </member>
        <member name="M:WataNekko.IO.Pipes.NamedPipe.TryWrite(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a specified number of bytes to the pipe using data from a buffer.
            Returns <c>false</c> if the pipe is not connected or the operation did not complete
            before timing out instead of throwing an exception.
            </summary>
            <returns><c>true</c> if the write operation succesfully returns; otherwise <c>false</c>.</returns>
            <param name="buffer">The byte array that contains the data to write to the pipe.</param>
            <param name="offset">The zero-based byte offset in the <paramref name="buffer"/> parameter at which to begin copying bytes to the pipe.</param>
            <param name="count">The number of bytes to write.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="buffer"/> passed is <c>null</c>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset"/> or <paramref name="count"/> parameters are outside a valid region of the <paramref name="buffer"/> being passed. Either <paramref name="offset"/> or <paramref name="count"/> is less than zero.</exception>
            <exception cref="T:System.ArgumentException"><paramref name="offset"/> plus <paramref name="count"/> is greater than the length of the <paramref name="buffer"/>.</exception>
        </member>
        <member name="T:WataNekko.IO.Pipes.NamedPipeClient">
            <summary>
            Represents a named pipe client.
            </summary>
        </member>
        <member name="P:WataNekko.IO.Pipes.NamedPipeClient.ServerName">
            <summary>
            Gets or sets the name of the remote computer to connect to, or "." to specify the local computer.
            </summary>
            <remarks>
            Changes are only applied after <see cref="M:WataNekko.IO.Pipes.NamedPipe.ConnectAsync"/> successfully returns.
            </remarks>
            <value>A <see cref="T:System.String"/> representing the name of the remote computer to connect to, or "." to specify the local computer. The default is ".".</value>
        </member>
        <member name="T:WataNekko.IO.Pipes.NamedPipeServer">
            <summary>
            Represents a named pipe server.
            </summary>
        </member>
        <member name="P:WataNekko.IO.Pipes.NamedPipeServer.MaxNumberOfServerInstances">
            <summary>
            Gets or sets a value representing the maximum number of server instances that can share the same name.
            </summary>
            <remarks>
            Changes are only applied after <see cref="M:WataNekko.IO.Pipes.NamedPipe.ConnectAsync"/> successfully returns.
            </remarks>
            <value>
            A <see cref="T:System.Int32"/> representing the maximum number of server instances that can share the same name.
            This value can be <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances">MaxAllowedServerInstances</see>. The default is 1.
            </value>
        </member>
        <member name="P:WataNekko.IO.Pipes.NamedPipeServer.TransmissionMode">
            <summary>
            Gets or sets the enum value specifying the transmission mode of the pipe.
            </summary>
            <remarks>
            Changes are only applied after <see cref="M:WataNekko.IO.Pipes.NamedPipe.ConnectAsync"/> successfully returns.
            </remarks>
            <value>A <see cref="T:System.IO.Pipes.PipeTransmissionMode"/> value. The default is <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte"/>.</value>
        </member>
    </members>
</doc>
